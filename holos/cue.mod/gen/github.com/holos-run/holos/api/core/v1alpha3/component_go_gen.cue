// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/holos-run/holos/api/core/v1alpha3

package v1alpha3

// Component defines the fields common to all holos component kinds.  Every
// holos component kind should embed Component.
#Component: {
	// Kind is a string value representing the resource this object represents.
	kind: string @go(Kind)

	// APIVersion represents the versioned schema of this representation of an object.
	apiVersion: string & "v1alpha3" @go(APIVersion)

	// Metadata represents data about the holos component such as the Name.
	metadata: #Metadata @go(Metadata)

	// APIObjectMap holds the marshalled representation of api objects.  Useful to
	// mix in resources to each Component type, for example adding an
	// ExternalSecret to a [HelmChart] Component.  Refer to [APIObjects].
	apiObjectMap?: #APIObjectMap @go(APIObjectMap)

	// DeployFiles represents file paths relative to the cluster deploy directory
	// with the value representing the file content.  Intended for defining the
	// ArgoCD Application resource or Flux Kustomization resource from within CUE,
	// but may be used to render any file related to the build plan from CUE.
	deployFiles?: #FileContentMap @go(DeployFiles)

	// Kustomize represents a kubectl kustomize build post-processing step.
	kustomize?: #Kustomize @go(Kustomize)

	// Skip causes holos to take no action regarding this component.
	skip: bool & (bool | *false) @go(Skip)
}

// Metadata represents data about the object such as the Name.
#Metadata: {
	// Name represents the name of the holos component.
	name: string @go(Name)

	// Namespace is the primary namespace of the holos component.  A holos
	// component may manage resources in multiple namespaces, in this case
	// consider setting the component namespace to default.
	//
	// This field is optional because not all resources require a namespace,
	// particularly CRDs and DeployFiles functionality.
	// +optional
	namespace?: string @go(Namespace)
}
