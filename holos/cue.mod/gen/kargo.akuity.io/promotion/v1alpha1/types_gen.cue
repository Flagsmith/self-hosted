// Code generated by timoni. DO NOT EDIT.

//timoni:generate timoni vendor crd -f /Users/jeff/Holos/kargo-demo/deploy/components/kargo/kargo.gen.yaml

package v1alpha1

import "strings"

// Promotion represents a request to transition a particular Stage
// into a
// particular Freight.
#Promotion: {
	// APIVersion defines the versioned schema of this representation
	// of an object.
	// Servers should convert recognized schemas to the latest
	// internal value, and
	// may reject unrecognized values.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	apiVersion: "kargo.akuity.io/v1alpha1"

	// Kind is a string value representing the REST resource this
	// object represents.
	// Servers may infer this from the endpoint the client submits
	// requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info:
	// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	kind: "Promotion"
	metadata!: {
		name!: strings.MaxRunes(253) & strings.MinRunes(1) & {
			string
		}
		namespace!: strings.MaxRunes(63) & strings.MinRunes(1) & {
			string
		}
		labels?: {
			[string]: string
		}
		annotations?: {
			[string]: string
		}
	}

	// Spec describes the desired transition of a specific Stage into
	// a specific
	// Freight.
	spec!: #PromotionSpec
}

// Spec describes the desired transition of a specific Stage into
// a specific
// Freight.
#PromotionSpec: {
	// Freight specifies the piece of Freight to be promoted into the
	// Stage
	// referenced by the Stage field.
	freight: strings.MinRunes(1)

	// Stage specifies the name of the Stage to which this Promotion
	// applies. The Stage referenced by this field MUST be in the same
	// namespace as the Promotion.
	stage: strings.MinRunes(1) & {
		=~"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
	}

	// Steps specifies the directives to be executed as part of this
	// Promotion.
	// The order in which the directives are executed is the order in
	// which they
	// are listed in this field.
	steps?: [...{
		// As is the alias this step can be referred to as.
		as?: string

		// Config is opaque configuration for the PromotionStep that is
		// understood
		// only by each PromotionStep's implementation. It is legal to
		// utilize
		// expressions in defining values at any level of this block.
		// See https://docs.kargo.io/references/expression-language for
		// details.
		config?: _

		// Retry is the retry policy for this step.
		retry?: {
			// ErrorThreshold is the number of consecutive times the step must
			// fail (for
			// any reason) before retries are abandoned and the entire
			// Promotion is marked
			// as failed.
			//
			// If this field is set to 0, the effective default will be a
			// step-specific
			// one. If no step-specific default exists (i.e. is also 0), the
			// effective
			// default will be the system-wide default of 1.
			//
			// A value of 1 will cause the Promotion to be marked as failed
			// after just
			// a single failure; i.e. no retries will be attempted.
			//
			// There is no option to specify an infinite number of retries
			// using a value
			// such as -1.
			//
			// In a future release, Kargo is likely to become capable of
			// distinguishing
			// between recoverable and non-recoverable step failures. At that
			// time, it is
			// planned that unrecoverable failures will not be subject to this
			// threshold
			// and will immediately cause the Promotion to be marked as failed
			// without
			// further condition.
			errorThreshold?: int

			// Timeout is the soft maximum interval in which a step that
			// returns a Running
			// status (which typically indicates it's waiting for something to
			// happen)
			// may be retried.
			//
			// The maximum is a soft one because the check for whether the
			// interval has
			// elapsed occurs AFTER the step has run. This effectively means a
			// step may
			// run ONCE beyond the close of the interval.
			//
			// If this field is set to nil, the effective default will be a
			// step-specific
			// one. If no step-specific default exists (i.e. is also nil), the
			// effective
			// default will be the system-wide default of 0.
			//
			// A value of 0 will cause the step to be retried indefinitely
			// unless the
			// ErrorThreshold is reached.
			timeout?: string
		}

		// Uses identifies a runner that can execute this step.
		uses: strings.MinRunes(1)
	}]

	// Vars is a list of variables that can be referenced by
	// expressions in
	// promotion steps.
	vars?: [...{
		// Name is the name of the variable.
		name: strings.MinRunes(1) & {
			=~"^[a-zA-Z_]\\w*$"
		}

		// Value is the value of the variable. It is allowed to utilize
		// expressions
		// in the value.
		// See https://docs.kargo.io/references/expression-language for
		// details.
		value: string
	}]
}
